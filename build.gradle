 plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.5-SNAPSHOT" apply false
    id "io.github.p03w.machete" version "1.+" // automatic jar compressing on build
     id "io.github.pacifistmc.forgix" version "1.2.9"
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    repositories {
        mavenCentral()
        maven { url = "https://maven.shedaniel.me/" } // Cloth Config, REI
        maven { url = "https://maven.blamejared.com/" } // JEI
        maven { url = "https://maven.parchmentmc.org" } // Parchment mappings
        maven { url = "https://maven.quiltmc.org/repository/release" } // Quilt Mappings
        maven { // Flywheel
            url = "https://maven.tterrag.com/"
            content {
                // need to be specific here due to version overlaps
                includeGroup("com.jozufozu.flywheel")
            }
        }
    }

    dependencies {
        minecraft "com.mojang:minecraft:${minecraft_version}"
        // layered mappings - Mojmap names, parchment and QM docs and parameters
        mappings(loom.layered {
            it.mappings("org.quiltmc:quilt-mappings:${minecraft_version}+build.${qm_version}:intermediary-v2")
            it.parchment("org.parchmentmc.data:parchment-${minecraft_version}:${parchment_version}@zip")
            it.officialMojangMappings { nameSyntheticMembers = false }
        })

        // see each subproject for dependencies.
    }

    build.finalizedBy(mergeJars)
    assemble.finalizedBy(mergeJars)
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = rootProject.archives_base_name
    group = rootProject.maven_group

    // Formats the mod version to include the loader, Minecraft version, and build number (if present)
    // example: 1.0.0+fabric-1.18.2-100
    String buildNumber = System.getenv("GITHUB_RUN_NUMBER")
    version = "${mod_version}-mc${minecraft_version}"

    repositories {
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    java {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
        withSourcesJar()
    }

    machete {
        // disable machete locally for faster builds
        enabled = true
    }
}

 forgix {
     group = "org.dadamalda.create.less_ticking"
     mergedJarName = "${archives_base_name}-${mod_version}-mc${minecraft_version}.jar"
     outputDir = "build/libs/merged"

     forge {
         projectName = "forge"
         jarLocation = "build/libs/${archives_base_name}-${mod_version}-mc${minecraft_version}.jar"

         mixin "examplemod-common.mixins.json"
         mixin "examplemod.mixins.json"
     }

     fabric {
         projectName = "fabric"
         jarLocation = "build/libs/${archives_base_name}-${mod_version}-mc${minecraft_version}.jar"
     }
 }